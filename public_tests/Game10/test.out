postcondition `Game10' is true
postcondition `Game10' is false
  result : Boolean = true
  self : Game = gf
  self.players : OrderedSet(Player) = OrderedSet{p1,p2}
  p : Human = p1
  p.hands : Set(Hand) = Set{hd1,hh1}
  $elem0 : Hand = hh1
  $elem0.game : Game = gf
  self : Game = gf
  ($elem0.game = self) : Boolean = true
  $elem0 : Hand = hd1
  $elem0.game : Game = g1
  self : Game = gf
  ($elem0.game = self) : Boolean = false
  p.hands->select($elem0 : Hand | ($elem0.game = self)) : Set(Hand) = Set{hh1}
  $e : Hand = hh1
  $e.cards : Set(Card) = Set{}
  p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards) : Bag(Card) = Bag{}
  p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards)->size : Integer = 0
  0 : Integer = 0
  (p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards)->size > 0) : Boolean = false
  p : Human = p2
  p.hands : Set(Hand) = Set{hd2,hh2}
  $elem0 : Hand = hh2
  $elem0.game : Game = gf
  self : Game = gf
  ($elem0.game = self) : Boolean = true
  $elem0 : Hand = hd2
  $elem0.game : Game = g1
  self : Game = gf
  ($elem0.game = self) : Boolean = false
  p.hands->select($elem0 : Hand | ($elem0.game = self)) : Set(Hand) = Set{hh2}
  $e : Hand = hh2
  $e.cards : Set(Card) = Set{jj2}
  p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards) : Bag(Card) = Bag{jj2}
  p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards)->size : Integer = 1
  0 : Integer = 0
  (p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards)->size > 0) : Boolean = true
  self.players->forAll(p : Player | (p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards)->size > 0)) : Boolean = false
  (result = self.players->forAll(p : Player | (p.hands->select($elem0 : Hand | ($elem0.game = self))->collect($e : Hand | $e.cards)->size > 0))) : Boolean = false
Error: postcondition false in operation call `Game::canPlayRound(self:gf)'.
checking structure...
checking invariants...
checking invariant (1) `Card::Card4': OK.
checking invariant (2) `Card::Card5': OK.
checking invariant (3) `Deck::Deck1': OK.
checking invariant (4) `Deck::Deck2': OK.
checking invariant (5) `Figure::Card2': OK.
checking invariant (6) `Game::Game1': OK.
checking invariant (7) `Game::Game2': OK.
checking invariant (8) `Game::Game3': OK.
checking invariant (9) `Game::Game4': OK.
checking invariant (10) `Game::Game5': OK.
checking invariant (11) `Game::inv1': FAILED.
  -> false : Boolean
checking invariant (12) `Human::Player2': OK.
checking invariant (13) `Human::Player3': OK.
checking invariant (14) `Joker::Card1': OK.
checking invariant (15) `Player::Player1': OK.
checking invariant (16) `Round::Round1': OK.
checking invariant (17) `Round::Round2': OK.
checking invariant (18) `Value::Card3': OK.
checking invariant (19) `War::War1': OK.
checking invariant (20) `War::War4': OK.
checked 20 invariants, 1 failure.
